@model Nursing_Ranker.Models.UpdatePasswordViewModel

@{
    ViewData["Title"] = "Update Password";
}

<h2>@ViewData["Title"]</h2>

@if (!Model.IsVerified)
{
    <!-- Step 1: Email and Favorite Color Verification -->
    <form method="post" asp-action="VerifyUser" id="verifyForm">
        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" required>
        </div>
        <div class="mb-3">
            <label for="FavColor" class="form-label">Favorite Color</label>
            <input type="text" class="form-control" id="FavColor" name="FavColor" value="@Model.FavColor" required>
        </div>
        <button type="submit" class="btn btn-primary">Verify</button>
    </form>
}
else
{
    <!-- Step 2: New Password Fields (Only displayed once verified) -->
    <h3>Change Your Password</h3>
    <form method="post" asp-action="UpdatePassword" asp-controller="User" id="updatePasswordForm">
        <input type="hidden" name="Email" value="@Model.Email" />

        <div class="mb-3">
            <label for="NewPassword" class="form-label">New Password</label>
            <input type="password" class="form-control" id="NewPassword" name="NewPassword" required>
        </div>

        <div class="mb-3">
            <label for="ConfirmPassword" class="form-label">Confirm New Password</label>
            <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" required>
        </div>

        <button type="submit" class="btn btn-success" id="updatePasswordButton">Update Password</button>
    </form>
}

<script type="text/javascript">
    document.getElementById("updatePasswordButton").addEventListener("click", function (event) {
        // Prevent the default form submission to allow for custom logic
        event.preventDefault();

        // Get the form element
        var form = document.getElementById("updatePasswordForm");

        // Check if the form is valid (basic validation can be added here)
        if (form.checkValidity()) {
            // Create FormData object for AJAX submission
            var formData = new FormData(form);

            // Send form data using AJAX
            var xhr = new XMLHttpRequest();
            xhr.open("POST", form.action, true);
            xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");

            xhr.onreadystatechange = function () {
                window.location.href = '@Url.Action("Login", "User")';
            };

            // Send the form data
            xhr.send(formData);
        } else {
            // You can add your validation error handling here if needed
            alert("Please fill in the required fields.");
        }
    });
</script>